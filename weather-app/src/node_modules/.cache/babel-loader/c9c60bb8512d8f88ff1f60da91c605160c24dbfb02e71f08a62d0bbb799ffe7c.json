{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lydia\\\\Documents\\\\GitHub\\\\Weather-App-SoloProject\\\\weather-app\\\\src\\\\components\\\\Days.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyForeCast = props => {\n  _s();\n  const [weeklyData, setWeeklyData] = useState([]);\n  const weekLat = props.week.lat;\n  const weekLon = props.week.lon;\n  const url = `https://api.openweathermap.org/data/2.5/forecast?`;\n  const apiKey = \"&appid=6934ba3e9b845ef11d371614239e858e\";\n  const fetchWeekly = async () => {\n    try {\n      let response = await fetch(url + \"lat=\" + weekLat + \"&lon=\" + weekLon + apiKey, {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        let weeklydataRaw = await response.json();\n        console.log(weeklydataRaw);\n        setWeeklyData(weeklydataRaw.list);\n      } else {\n        alert(\"Error!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  fetchWeekly();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Forcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: weeklyData.main.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WeeklyForeCast, \"PKfUCM12ynmVN7qkM5IzdC/IjDQ=\");\n_c = WeeklyForeCast;\nexport default WeeklyForeCast;\nvar _c;\n$RefreshReg$(_c, \"WeeklyForeCast\");","map":{"version":3,"names":["useState","Container","Row","Col","WeeklyForeCast","props","weeklyData","setWeeklyData","weekLat","week","lat","weekLon","lon","url","apiKey","fetchWeekly","response","fetch","method","ok","weeklydataRaw","json","console","log","list","alert","error","main","temp"],"sources":["C:/Users/lydia/Documents/GitHub/Weather-App-SoloProject/weather-app/src/components/Days.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst WeeklyForeCast = (props) => {\r\n  const [weeklyData, setWeeklyData] = useState([]);\r\n  const weekLat = props.week.lat;\r\n  const weekLon = props.week.lon;\r\n  const url = `https://api.openweathermap.org/data/2.5/forecast?`;\r\n  const apiKey = \"&appid=6934ba3e9b845ef11d371614239e858e\";\r\n\r\n  const fetchWeekly = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        url + \"lat=\" + weekLat + \"&lon=\" + weekLon + apiKey,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        let weeklydataRaw = await response.json();\r\n        console.log(weeklydataRaw);\r\n        setWeeklyData(weeklydataRaw.list);\r\n      } else {\r\n        alert(\"Error!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  fetchWeekly();\r\n\r\n  return (\r\n    <>\r\n      <h2>Weekly Forcast</h2>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h2>{weeklyData.main.temp}</h2>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeeklyForeCast;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC;AAAA;AAEtD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,OAAO,GAAGH,KAAK,CAACI,IAAI,CAACC,GAAG;EAC9B,MAAMC,OAAO,GAAGN,KAAK,CAACI,IAAI,CAACG,GAAG;EAC9B,MAAMC,GAAG,GAAI,mDAAkD;EAC/D,MAAMC,MAAM,GAAG,yCAAyC;EAExD,MAAMC,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxBJ,GAAG,GAAG,MAAM,GAAGL,OAAO,GAAG,OAAO,GAAGG,OAAO,GAAGG,MAAM,EACnD;QACEI,MAAM,EAAE;MACV,CAAC,CACF;MACD,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,IAAIC,aAAa,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QACzCC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;QAC1Bb,aAAa,CAACa,aAAa,CAACI,IAAI,CAAC;MACnC,CAAC,MAAM;QACLC,KAAK,CAAC,QAAQ,CAAC;MACjB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB;EACF,CAAC;EACDX,WAAW,EAAE;EAEb,oBACE;IAAA,wBACE;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB,QAAC,SAAS;MAAA,uBACR,QAAC,GAAG;QAAA,uBACF,QAAC,GAAG;UAAA,uBACF;YAAA,UAAKT,UAAU,CAACqB,IAAI,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA;MAC3B;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBACX;AAEP,CAAC;AAAC,GAxCIxB,cAAc;AAAA,KAAdA,cAAc;AA0CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}