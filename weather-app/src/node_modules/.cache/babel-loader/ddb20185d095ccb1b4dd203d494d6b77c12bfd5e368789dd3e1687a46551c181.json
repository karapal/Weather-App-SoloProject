{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lydia\\\\Documents\\\\GitHub\\\\Weather-App-SoloProject\\\\weather-app\\\\src\\\\Components\\\\MainPage.jsx\";\nimport React from \"react\";\nimport { Button, Row, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MainPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: true,\n      isError: false,\n      cities: [],\n      input: \"\"\n    };\n  }\n  async getLocations(query) {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&APPID=3e93bd34cafe899e1166a35a9efa51fc&units=metric`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          ...this.state,\n          cities: data\n        });\n        console.log(this.state);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  componentDidMount() {\n    this.getLocations(\"Budapest\");\n  }\n  render() {\n    var _this$state$cities, _this$state$cities$ma, _this$state$cities2, _this$state$cities2$w;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.input,\n          onChange: e => {\n            this.setState({\n              ...this.state,\n              input: e.target.value\n            });\n          },\n          placeholder: \"Enter location...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"searchbutton\",\n          onClick: () => {\n            this.getLocations(this.state.input);\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexweather\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"h1\",\n              children: [Math.round((_this$state$cities = this.state.cities) === null || _this$state$cities === void 0 ? void 0 : (_this$state$cities$ma = _this$state$cities.main) === null || _this$state$cities$ma === void 0 ? void 0 : _this$state$cities$ma.temp), \"C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), \" \", (_this$state$cities2 = this.state.cities) === null || _this$state$cities2 === void 0 ? void 0 : (_this$state$cities2$w = _this$state$cities2.weather) === null || _this$state$cities2$w === void 0 ? void 0 : _this$state$cities2$w.map(weather => /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"weatherlogo\",\n              attribute: true,\n              title: weather.description,\n              src: `http://openweathermap.org/img/wn/${weather.icon}@2x.png`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"city\",\n            children: this.state.cities.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          id: \"buttonrow\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"searchbutton\",\n            onClick: () => {\n              this.props.dispatch({\n                type: \"ADD_CITY\",\n                payload: this.state.cities\n              });\n            },\n            children: \"Save city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/saved\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"seemore\",\n              children: \"Saved Locations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default MainPage;","map":{"version":3,"names":["React","Button","Row","Container","Link","MainPage","Component","state","isLoading","isError","cities","input","getLocations","query","response","fetch","ok","data","json","console","log","setState","alert","error","componentDidMount","render","e","target","value","Math","round","main","temp","weather","map","description","icon","name","props","dispatch","type","payload"],"sources":["C:/Users/lydia/Documents/GitHub/Weather-App-SoloProject/weather-app/src/Components/MainPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Row, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass MainPage extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    isError: false,\r\n    cities: [],\r\n    input: \"\",\r\n  };\r\n\r\n  async getLocations(query) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${query}&APPID=3e93bd34cafe899e1166a35a9efa51fc&units=metric`\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({ ...this.state, cities: data });\r\n        console.log(this.state);\r\n      } else {\r\n        alert(\"Error fetching results\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocations(\"Budapest\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container id=\"container\">\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.input}\r\n            onChange={(e) => {\r\n              this.setState({ ...this.state, input: e.target.value });\r\n            }}\r\n            placeholder=\"Enter location...\"\r\n          />\r\n          <Button\r\n            id=\"searchbutton\"\r\n            onClick={() => {\r\n              this.getLocations(this.state.input);\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n          <div>\r\n            <div className=\"flexweather\">\r\n              <h1 id=\"h1\">{Math.round(this.state.cities?.main?.temp)}C</h1>{\" \"}\r\n              {this.state.cities?.weather?.map((weather) => (\r\n                <img\r\n                  id=\"weatherlogo\"\r\n                  attribute\r\n                  title={weather.description}\r\n                  src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\r\n                  alt=\"\"\r\n                ></img>\r\n              ))}\r\n            </div>\r\n            <p id=\"city\">{this.state.cities.name}</p>\r\n          </div>\r\n\r\n          <Row id=\"buttonrow\">\r\n            <Button\r\n              id=\"searchbutton\"\r\n              onClick={() => {\r\n                this.props.dispatch({\r\n                  type: \"ADD_CITY\",\r\n                  payload: this.state.cities,\r\n                });\r\n              }}\r\n            >\r\n              Save city\r\n            </Button>\r\n            <Link to=\"/saved\">\r\n              <Button id=\"seemore\">Saved Locations</Button>\r\n            </Link>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}